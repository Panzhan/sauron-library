{"version":3,"file":"accurate.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["type Handler = (n1: any, n2: any) => number;\n\n/**\n * 获取小数位长度\n *\n * @param num 数字\n */\nfunction getDecimalLength(num: number): number {\n  try {\n    return num.toString().split('.')[1].length;\n  } catch (e) {\n    return 0;\n  }\n}\n\n/**\n * 判断是否是数字\n *\n * 举例：\n * isNumber(1) // true\n * isNumber('1') // true\n * ---------------------\n * isNumber() // false\n * isNumber('') // false\n * isNumber(true) // false\n * isNumber(null) // false\n * isNumber(NaN) // false\n * isNumber('1px') // false\n *\n * @param num 数字\n */\nfunction isNumber(num: any): boolean {\n  return !Number.isNaN(Number(num)) && !Number.isNaN(Number.parseFloat(num));\n}\n\n/**\n * 包装函数\n *\n * @param n1 数值1\n * @param n2 数值2\n * @param handler 处理函数\n * @throws {TypeError}\n */\nfunction layer(n1: any, n2: any, handler: Handler): number {\n  if (!isNumber(n1)) {\n    throw new TypeError('The first parameter is not a number');\n  }\n\n  if (typeof n2 === 'undefined') {\n    return Number(n1);\n  }\n\n  if (!isNumber(n2)) {\n    throw new TypeError('The second parameter is not a number');\n  }\n\n  return handler(Number(n1), Number(n2));\n}\n\n/**\n * 乘法运算\n *\n * @param n1 被乘数\n * @param n2 乘数\n */\nfunction _multiply(n1: number, n2: number): number {\n  const l1 = getDecimalLength(n1);\n  const l2 = getDecimalLength(n2);\n  const s1 = n1.toString();\n  const s2 = n2.toString();\n  const m = 10 ** (l1 + l2);\n\n  return (Number(s1.replace('.', '')) * Number(s2.replace('.', ''))) / m;\n}\n\n/**\n * 除法运算\n *\n * @param n1 被除数\n * @param n2 除数\n */\nfunction _division(n1: number, n2: number): number {\n  const l1 = getDecimalLength(n1);\n  const l2 = getDecimalLength(n2);\n  const s1 = n1.toString();\n  const s2 = n2.toString();\n  const m = 10 ** (l2 - l1);\n\n  return _multiply(Number(s1.replace('.', '')) / Number(s2.replace('.', '')), m);\n}\n\n/**\n * 加法运算\n *\n * @param n1 被加数\n * @param n2 加数\n */\nfunction _add(n1: number, n2: number): number {\n  const l1 = getDecimalLength(n1);\n  const l2 = getDecimalLength(n2);\n  const m = 10 ** Math.max(l1, l2);\n\n  return (_multiply(n1, m) + _multiply(n2, m)) / m;\n}\n\n/**\n * 减法运算\n *\n * @param n1 被减数\n * @param n2 减数\n */\nfunction _minus(n1: number, n2: number): number {\n  const l1 = getDecimalLength(n1);\n  const l2 = getDecimalLength(n2);\n  const m = 10 ** Math.max(l1, l2);\n\n  return (_multiply(n1, m) - _multiply(n2, m)) / m;\n}\n\nexport const add = (n1: any, n2?: any) => layer(n1, n2, _add);\nexport const minus = (n1: any, n2?: any) => layer(n1, n2, _minus);\nexport const multiply = (n1: any, n2?: any) => layer(n1, n2, _multiply);\nexport const division = (n1: any, n2?: any) => layer(n1, n2, _division);\n"],"names":["getDecimalLength","num","toString","split","length","e","isNumber","Number","isNaN","parseFloat","layer","n1","n2","handler","TypeError","_multiply","l1","l2","s1","s2","m","replace","_division","_add","Math","max","_minus"],"mappings":"aAOA,SAASA,EAAiBC,cAEfA,EAAIC,WAAWC,MAAM,KAAK,GAAGC,OACpC,MAAOC,UACA,GAoBX,SAASC,EAASL,UACRM,OAAOC,MAAMD,OAAON,MAAUM,OAAOC,MAAMD,OAAOE,WAAWR,IAWvE,SAASS,EAAMC,EAASC,EAASC,OAC1BP,EAASK,SACN,IAAIG,UAAU,+CAGJ,IAAPF,SACFL,OAAOI,OAGXL,EAASM,SACN,IAAIE,UAAU,+CAGfD,EAAQN,OAAOI,GAAKJ,OAAOK,IASpC,SAASG,EAAUJ,EAAYC,OACvBI,EAAKhB,EAAiBW,GACtBM,EAAKjB,EAAiBY,GACtBM,EAAKP,EAAGT,WACRiB,EAAKP,EAAGV,WACRkB,WAAI,GAAOJ,EAAKC,UAEdV,OAAOW,EAAGG,QAAQ,IAAK,KAAOd,OAAOY,EAAGE,QAAQ,IAAK,KAAQD,EASvE,SAASE,EAAUX,EAAYC,OACvBI,EAAKhB,EAAiBW,GACtBM,EAAKjB,EAAiBY,GACtBM,EAAKP,EAAGT,WACRiB,EAAKP,EAAGV,WACRkB,WAAI,GAAOH,EAAKD,UAEfD,EAAUR,OAAOW,EAAGG,QAAQ,IAAK,KAAOd,OAAOY,EAAGE,QAAQ,IAAK,KAAMD,GAS9E,SAASG,EAAKZ,EAAYC,OAClBI,EAAKhB,EAAiBW,GACtBM,EAAKjB,EAAiBY,GACtBQ,WAAI,GAAMI,KAAKC,IAAIT,EAAIC,WAErBF,EAAUJ,EAAIS,GAAKL,EAAUH,EAAIQ,IAAMA,EASjD,SAASM,EAAOf,EAAYC,OACpBI,EAAKhB,EAAiBW,GACtBM,EAAKjB,EAAiBY,GACtBQ,WAAI,GAAMI,KAAKC,IAAIT,EAAIC,WAErBF,EAAUJ,EAAIS,GAAKL,EAAUH,EAAIQ,IAAMA,cAG9B,SAACT,EAASC,UAAaF,EAAMC,EAAIC,EAAIW,qBAGhC,SAACZ,EAASC,UAAaF,EAAMC,EAAIC,EAAIU,kBAFxC,SAACX,EAASC,UAAaF,EAAMC,EAAIC,EAAIc,qBAClC,SAACf,EAASC,UAAaF,EAAMC,EAAIC,EAAIG"}